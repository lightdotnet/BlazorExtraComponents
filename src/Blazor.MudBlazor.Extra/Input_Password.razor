<MudTextField T="string"
    Value=Value ValueChanged=ValueChanged
    Variant="Mud.Variant" Margin="@Mud.Margin"
    Required="Required"
    Placeholder="@PlaceHolder"
    Class="@Class"
    InputType="passwordInput"
    Adornment="Adornment.End" AdornmentIcon="@passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />

@code {
    #nullable disable
    
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public string PlaceHolder { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public bool Required { get; set; }
    
    bool passwordVisibility;

    InputType passwordInput = InputType.Password;

    string passwordInputIcon = Icons.Material.Filled.VisibilityOff;
    
    void TogglePasswordVisibility()
    {
        if (passwordVisibility)
        {
            passwordVisibility = false;
            passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            passwordInput = InputType.Password;
        }
        else
        {
            passwordVisibility = true;
            passwordInputIcon = Icons.Material.Filled.Visibility;
            passwordInput = InputType.Text;
        }
    }
}
